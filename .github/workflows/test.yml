on:
  push:
    branches:
      - "main"
  pull_request:
name: test
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 20s
          --health-timeout 10s
          --health-retries 10
        ports:
          3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
          MYSQL_USER: todo
          MYSQL_PASSWORD: todo
          MYSQL_DATABASE: todo
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: '>1.19'
    - uses: actions/checkout@v3
    - run: [
      go install github.com/k0kubun/sqldef/cmd/mysqldef@latest
      mysqldef -u todo -p todo -h 127.0.0.1 -P 3306 todo < ./_tools/mysql/schema.sql
    ]
    - run: go test ./... -coverprofile-coverage.out
    - name: report coverage
    - uses: k1loW/octocov-action@v0

name: golang-ci
on:
  pull_request:
    paths:
      - "**.go"
      - .github/workflows/golangci.yml
jobs:
  golangci-lint:
    name: golangci-lint
    runs-on: ubunts-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          golangci_lint_flags: "--config=./golangci.yml ./..."
          fail_on_error: true
          reporter: "github-pr-review"